{"slug":"convert-inches-to-feet","title":"Convert inches to feet","trackId":5617,"tags":["Java","JavaScript","Ruby","TypeScript","Python","Dart","PHP","Rust"],"contributors":["Sttormx","anandfresh","hugosmoreira","gtierrezandres","Varun-Dhruv","harshraj8843"],"contentHtml":"<h2>Write a program to convert inches to feet</h2>\n<p>1 foot = 12 inches</p>\n<pre><code>Input  : 60\r\nOutput : 5\n</code></pre>\n<hr>\n<pre><code>import java.util.*;\nimport java.io.*;\npublic class Main\n{\n\tpublic static void main(String[] args) {\n\t    System.out.print(\"Please enter the inch value: \");\n\t    Scanner sc=new Scanner(System.in);\n\t    int inches=sc.nextInt();\n\t    int feet = inches/12;\n\t   System.out.print(inches+\" inches is \"+feet+ \" feet\");\n\n\t}\n}\n</code></pre>\n<pre><code>function inchesToFeet(inch){\n  return Math.round(inch/12);\n}\n\nconsole.log(inchesToFeet(60));\n</code></pre>\n<pre><code>print \"Please enter the inch value: \";\ninches = gets.chomp.to_f;  \n\nfeet = inches/12;\n\nprint \"The value in feet : #{feet.to_f.round(2)}\"\n</code></pre>\n<pre><code>const ConvertInchesToFeet = (Inches: number): number => {\n    let result: number = parseFloat((Inches / 12).toFixed(2));\n    return result;\n}\nexport default ConvertInchesToFeet;\n</code></pre>\n<pre><code>print(round(float(input())/12, 2))\n</code></pre>\n<pre><code>import 'dart:io';\n\nvoid main() {\n  print('Enter value in inches:');\n  String? input = stdin.readLineSync()!;\n  double result = (double.parse(input)) / 12;\n  print(result.toStringAsFixed(2));\n}\n</code></pre>\n<pre><code>&#x3C;?php\n\nfunction inchesToFeet($inch){\n  return round($inch/12, 2);\n}\n\necho(inchesToFeet(60));\n\n?>\n</code></pre>\n<pre><code>fn main() {\n    // Prompt the user for the number of inches\n    println!(\"Enter the number of inches: \");\n\n    // Read the user input and store it in a variable\n    let mut inches = String::new();\n    std::io::stdin().read_line(&#x26;mut inches)\n        .expect(\"Failed to read line\");\n\n    // Check if the input is empty\n    if inches.trim().is_empty() {\n        println!(\"Please enter a valid number\");\n        return;\n    }\n\n    // Convert the input to a number\n    let inches: u32 = inches.trim().parse()\n        .expect(\"Please enter a valid number\");\n\n    // Convert inches to feet\n    let feet = inches / 12;\n\n    // Print the result\n    println!(\"{} inches is equal to {} feet\", inches, feet);\n}\n</code></pre>\n","markdown":"\n## Write a program to convert inches to feet\n\n1 foot = 12 inches\r\n\r\n```\r\nInput  : 60\r\nOutput : 5\r\n```\n\n---\n\n<CodeBlock slug=\"convert-inches-to-feet\" >\n\n```java\nimport java.util.*;\nimport java.io.*;\npublic class Main\n{\n\tpublic static void main(String[] args) {\n\t    System.out.print(\"Please enter the inch value: \");\n\t    Scanner sc=new Scanner(System.in);\n\t    int inches=sc.nextInt();\n\t    int feet = inches/12;\n\t   System.out.print(inches+\" inches is \"+feet+ \" feet\");\n\n\t}\n}\n```\n\n```js\nfunction inchesToFeet(inch){\n  return Math.round(inch/12);\n}\n\nconsole.log(inchesToFeet(60));\n```\n\n```rb\nprint \"Please enter the inch value: \";\ninches = gets.chomp.to_f;  \n\nfeet = inches/12;\n\nprint \"The value in feet : #{feet.to_f.round(2)}\"\n```\n\n```ts\nconst ConvertInchesToFeet = (Inches: number): number => {\n    let result: number = parseFloat((Inches / 12).toFixed(2));\n    return result;\n}\nexport default ConvertInchesToFeet;\n```\n\n```py\nprint(round(float(input())/12, 2))\n```\n\n```dart\nimport 'dart:io';\n\nvoid main() {\n  print('Enter value in inches:');\n  String? input = stdin.readLineSync()!;\n  double result = (double.parse(input)) / 12;\n  print(result.toStringAsFixed(2));\n}\n```\n\n```php\n<?php\n\nfunction inchesToFeet($inch){\n  return round($inch/12, 2);\n}\n\necho(inchesToFeet(60));\n\n?>\n```\n\n```rs\nfn main() {\n    // Prompt the user for the number of inches\n    println!(\"Enter the number of inches: \");\n\n    // Read the user input and store it in a variable\n    let mut inches = String::new();\n    std::io::stdin().read_line(&mut inches)\n        .expect(\"Failed to read line\");\n\n    // Check if the input is empty\n    if inches.trim().is_empty() {\n        println!(\"Please enter a valid number\");\n        return;\n    }\n\n    // Convert the input to a number\n    let inches: u32 = inches.trim().parse()\n        .expect(\"Please enter a valid number\");\n\n    // Convert inches to feet\n    let feet = inches / 12;\n\n    // Print the result\n    println!(\"{} inches is equal to {} feet\", inches, feet);\n}\n```\n\n</CodeBlock>\n\n","latestUpdateDate":"2022-12-18T17:48:53Z"}